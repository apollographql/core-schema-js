import { Spec } from '../spec';
export declare const SpecUrl: import("../serde").Serialize<import("../is").Maybe<Spec>, import("graphql").ValueNode> & import("../serde").Deserialize<import("../is").Maybe<Spec>, import("graphql").ValueNode> & import("../bind").Specified<"https://lib.apollo.dev/core/v0.1", "SpecUrl">;
export declare const using: import("../bind").Directive<"https://lib.apollo.dev/core/v0.1", "core", {
    using: import("../serde").Serialize<Spec, import("graphql").VariableNode | import("graphql").IntValueNode | import("graphql").FloatValueNode | import("graphql").StringValueNode | import("graphql").BooleanValueNode | import("graphql").EnumValueNode | import("graphql").ListValueNode | import("graphql").ObjectValueNode> & import("../serde").Deserialize<Spec, import("graphql").VariableNode | import("graphql").IntValueNode | import("graphql").FloatValueNode | import("graphql").StringValueNode | import("graphql").BooleanValueNode | import("graphql").EnumValueNode | import("graphql").ListValueNode | import("graphql").ObjectValueNode>;
    as: import("../serde").Serialize<import("graphql/jsutils/Maybe").Maybe<string>, import("graphql").ValueNode> & import("../serde").Deserialize<import("graphql/jsutils/Maybe").Maybe<string>, import("graphql").ValueNode>;
    export: import("../serde").Serialize<import("graphql/jsutils/Maybe").Maybe<boolean>, import("graphql").ValueNode> & import("../serde").Deserialize<import("graphql/jsutils/Maybe").Maybe<boolean>, import("graphql").ValueNode>;
}, "SCHEMA">;
export declare const surface: import("../bind").Directive<"https://lib.apollo.dev/core/v0.1", "core__surface", {
    export: import("../serde").Serialize<boolean, import("graphql").VariableNode | import("graphql").IntValueNode | import("graphql").FloatValueNode | import("graphql").StringValueNode | import("graphql").BooleanValueNode | import("graphql").EnumValueNode | import("graphql").ListValueNode | import("graphql").ObjectValueNode> & import("../serde").Deserialize<boolean, import("graphql").VariableNode | import("graphql").IntValueNode | import("graphql").FloatValueNode | import("graphql").StringValueNode | import("graphql").BooleanValueNode | import("graphql").EnumValueNode | import("graphql").ListValueNode | import("graphql").ObjectValueNode>;
}, "QUERY" | "MUTATION" | "SUBSCRIPTION" | "FIELD" | "FRAGMENT_DEFINITION" | "FRAGMENT_SPREAD" | "INLINE_FRAGMENT" | "VARIABLE_DEFINITION" | "SCHEMA" | "SCALAR" | "OBJECT" | "FIELD_DEFINITION" | "ARGUMENT_DEFINITION" | "INTERFACE" | "UNION" | "ENUM" | "ENUM_VALUE" | "INPUT_OBJECT" | "INPUT_FIELD_DEFINITION">;
export default using;
//# sourceMappingURL=core.d.ts.map